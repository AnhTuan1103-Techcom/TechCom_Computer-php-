<?php

namespace App\Http\Controllers\client;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Wishlist;

class WishlistController extends Controller
{
    // Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m y√™u th√≠ch c·ªßa ng∆∞·ªùi d√πng
    public function index()
    {
        $wishlists = Wishlist::where('user_id', auth()->id())->get();
        return view('client.wishlist.main', compact('wishlists'));
    }

    // Hi·ªÉn th·ªã chi ti·∫øt m·ªôt s·∫£n ph·∫©m trong danh s√°ch y√™u th√≠ch
    public function show($id)
    {
        return view('client.wishlist.show', ['id' => $id]);
    }

    // Th√™m s·∫£n ph·∫©m v√†o danh s√°ch y√™u th√≠ch
    public function addToWishlist(Request $request)
    {
        $request->validate([
            'product_id' => 'required|exists:products,id',
            'quantity' => 'required|integer|min:1',
        ]);

        Wishlist::create([
            'user_id' => auth()->id(),
            'product_id' => $request->product_id,
            'quantity' => $request->quantity,
        ]);

        return redirect()->back()->with('success', 'üõí S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o danh s√°ch y√™u th√≠ch!');
    }

    // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong danh s√°ch y√™u th√≠ch
    public function updateQuantity(Request $request)
    {
        $wishlistItem = Wishlist::find($request->cart_id);
        if ($wishlistItem) {
            $wishlistItem->quantity = $request->quantity;
            $wishlistItem->save();

            return response()->json([
                'success' => true,
                'quantity' => $wishlistItem->quantity
            ]);
        }

        return response()->json(['success' => false, 'message' => 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.']);
    }

    // Xo√° s·∫£n ph·∫©m kh·ªèi danh s√°ch y√™u th√≠ch
    public function delete($id)
    {
        $wishlistItem = Wishlist::find($id);
        if ($wishlistItem) {
            $wishlistItem->delete();
            return response()->json(['success' => true, 'message' => 'S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi danh s√°ch y√™u th√≠ch.']);
        }
        return response()->json(['success' => false, 'message' => 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m trong danh s√°ch.']);
    }
}
